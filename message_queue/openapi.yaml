openapi: 3.1.1
info:
  title: Message Queue Service API
  version: "1.0.0"
  description: >
    API for a message queue service that supports pushing new messages,
    pulling the oldest message from the queue, and listing all messages.
servers:
  - url: http://localhost:{port}
    description: Local server
    variables:
      port:
        default: "8003"

paths:
  /:
    get:
      description: Returns a plain text greeting.
      responses:
        "200":
          description: Successful response with a welcome message.
          content:
            text/plain:
              schema:
                type: string
                example: Hello from message queue service!

  /push:
    post:
      description: >
        Adds a new message to the queue defined in the body by queue_name, by pushing a Transaction or Result object.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queue_name:
                  $ref: "#/components/schemas/MessageQueueName"
                message:
                  oneOf:
                    - $ref: "#/components/schemas/Transaction"
                    - $ref: "#/components/schemas/Result"
      responses:
        "201":
          description: Message successfully added to the queue.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Message has been added to queue {queue_name}
        "400":
          description: Invalid message format.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message format
                  message:
                    type: array
                    items:
                      type: object
        "404":
          description: Queue not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue not found
                  message:
                    type: string
                    example: Queue with name {name} not found
        "409":
          description: Queue is full
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue is full
                  message:
                    type: string
                    example: Queue {queue_name} is full
        "500":
          description: Error occurred while adding the message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to add message to queue

  /push-n:
    post:
      description: >
        Adds multiple messages to the queue defined in the body by queue_name, by pushing a list of transaction payloads.
        The request body should contain an array of Transaction objects or Result objects.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                queue_name:
                  $ref: "#/components/schemas/MessageQueueName"
                messages:
                  type: array
                  items:
                    oneOf:
                      - $ref: "#/components/schemas/Transaction"
                      - $ref: "#/components/schemas/Result"
      responses:
        "201":
          description: Messages successfully added to the queue.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Messages have been added to queue {queue_name}
        "400":
          description: Invalid message format.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message format
                  message:
                    type: array
                    items:
                      type: object
        "404":
          description: Queue not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue not found
                  message:
                    type: string
                    example: Queue with name {name} not found
        "409":
          description: Queue is full.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue is full
                  message:
                    type: string
                    example: Queue {queue_name} is full
        "500":
          description: Error occurred while adding the messages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to add messages to queue

  /pull:
    get:
      description: Removes the first (oldest) message from the queue named as in the query parameter and returns its content.
      parameters:
        - name: queue-name
          in: query
          required: true
          description: The name of the message queue to list messages from.
          schema:
            $ref: "#/components/schemas/MessageQueueName"
      responses:
        "200":
          description: Successfully pulled the oldest message.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
        "404":
          description: The message queue with name does not exist, or no message is found in the queue.
          content:
            application/json:
              schema:
                oneOf:
                  - title: Queue Not Found
                    type: object
                    properties:
                      error:
                        type: string
                        example: Queue not found
                      message:
                        type: string
                        example: Queue with name {name} not found
                  - title: No Message Found
                    type: object
                    properties:
                      message:
                        type: string
                        example: No message found
        "400":
          description: Invalid queue name.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message queue name format
                  message:
                    type: array
                    items:
                      type: object

  /pull-n:
    get:
      description: >
        Removes the first (oldest) N messages from the queue named as in the query parameter and returns their content. Utilizes long polling to wait for messages to be available if the queue is empty.
        If there are fewer than N messages in the queue, it will return all available messages.
        Else if the queue is empty, it will return 204 with an empty array.
      parameters:
        - name: queue-name
          in: query
          required: true
          description: The name of the message queue to list messages from.
          schema:
            $ref: "#/components/schemas/MessageQueueName"
        - name: count
          in: query
          required: true
          description: The number of messages to pull from the queue.
          schema:
            type: integer
            minimum: 1
            example: 5
      responses:
        "200":
          description: Successfully pulled the oldest N / less than N available messages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "204":
          description: No messages found in the queue, long polling did not yield any messages.
        "404":
          description: The message queue with name does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue not found
                  message:
                    type: string
                    example: Queue with name {name} not found
        "400":
          description: Invalid queue name or count parameter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message queue name format or count parameter
                  message:
                    type: array
                    items:
                      type: object

  /list:
    get:
      description: Retrieves all messages currently in the queue denoted by the queue_name query parameter.
      parameters:
        - name: queue-name
          in: query
          required: true
          description: The name of the message queue to list messages from.
          schema:
            $ref: "#/components/schemas/MessageQueueName"
      queryParamereters:
        - name: queue_name
          in: query
          required: true
          description: The name of the message queue to list messages from.
          schema:
            $ref: "#/components/schemas/MessageQueueName"
      responses:
        "200":
          description: List of messages retrieved.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Transaction"
        "500":
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to retrieve messages
        "404":
          description: The message queue with name does not exist.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue not found
                  message:
                    type: string
                    example: Queue with name {name} not found
        "400":
          description: Invalid queue name.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid message queue name format
                  message:
                    type: array
                    items:
                      type: object

  /create:
    post:
      description: >
        Creates a new message queue with the specified name.
        The name must be between 4 and 20 characters long.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/MessageQueueName"
      responses:
        "201":
          description: Message queue created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Message queue created successfully
        "400":
          description: Invalid queue name.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid queue name format
                  message:
                    type: array
                    items:
                      type: object
        "409":
          description: Queue already exists.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue already exists
                  message:
                    type: string
                    example: Queue with name {name} already exists

  /delete:
    delete:
      description: >
        Deletes the message queue with the specified name.
        The name must be between 4 and 20 characters long.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: "#/components/schemas/MessageQueueName"
      responses:
        "200":
          description: Message queue deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Message queue deleted successfully
        "404":
          description: Queue not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Queue not found
                  message:
                    type: string
                    example: Queue with name {name} not found

components:
  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
          example: 1
        customer_id:
          type: integer
          minimum: 1
          example: 1
        vendor_id:
          type: integer
          minimum: 1
          example: 1
        timestamp:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        status:
          type: string
          enum: [accepted, rejected, pending]
          example: accepted
        amount:
          type: number
          minimum: 0
          example: 100
    Result:
      type: object
      properties:
        transaction_id:
          type: integer
          minimum: 1
          example: 1
        timestamp:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
        is_fraudulent:
          type: number
          enum: [0, 1]
          example: 0
        confidence:
          type: number
          minimum: 0
          maximum: 1
          example: 0.95
    MessageQueueName:
      type: string
      example: transactions_queue
      minimum: 4
      maximum: 20
